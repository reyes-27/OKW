version: '3.9'

services:

#==================================================================================================
  okw_backend:
    image: okw_backend
    container_name: okw_backend
    build:
      context: .
      dockerfile: ./Dockerfile
    
    # command: gunicorn core.wsgi:application --bind 0.0.0.0:8000 --workers=2 --threads=2
    #For debug
    command: python manage.py runserver 0.0.0.0:8000
    # entrypoint: ./entrypoint
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
      
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=okw_api_db
      - POSTGRES_PASSWORD=testpass123

    depends_on:
      - okw_api_db
      - redis
#==================================================================================================

  celery:
    image: celery
    container_name: celery
    build:
      context: .
      dockerfile: ./Dockerfile
    
    command: celery --app=core worker -l INFO -Q queue:0,queue:1,queue:2,queue:3
    # entrypoint: ./entrypoint
    volumes:
      - .:/usr/src/app
      
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=okw_api_db
      - POSTGRES_PASSWORD=testpass123

    depends_on:
      - okw_backend
      - okw_api_db
      - redis
#==================================================================================================

  celery2:
    container_name: celery2
    build:
      context: ./my_celery_worker
      dockerfile: Dockerfile
    
    command: celery -A my_celery worker -l INFO -Q queue:4,queue:5,queue:6
    # entrypoint: ./entrypoint
    volumes:
      - ./my_celery_worker:/usr/src/app
    depends_on:
      - okw_backend
      - okw_api_db
      - redis

#==================================================================================================
  
  # okw_backend_asgi:
  #   image: okw_backend
  #   container_name: okw_backend_asgi
  #   build:
  #     context: .
  #     dockerfile: ./Dockerfile
  #   command: python -m uvicorn core.asgi:application --reload --host 0.0.0.0 --port 8080
  #   volumes:
  #     - .:/usr/src/app
  #   ports:
  #     - "8080:8080"
      
    # environment:
    #   - POSTGRES_NAME=postgres
    #   - POSTGRES_DB=postgres
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_HOST=okw_api_db
    #   - POSTGRES_PASSWORD=testpass123

    # depends_on:
    #   - okw_api_db
#==================================================================================================
  redis:
    image: redis:7.2.4-alpine
    container_name: redis

#==================================================================================================
  okw_api_db:
    image: postgres
    container_name: okw_api_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=okw_api_db
      - POSTGRES_PASSWORD=testpass123
#==================================================================================================
volumes:
  postgres_data:
